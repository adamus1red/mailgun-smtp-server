name: Docker Image CI

on:
  push:
    branches: [ master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ master ]

jobs:

  build:

    runs-on: ubuntu-latest

    name: Build and push docker image
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 1

      - name: Install Cosign
        uses: sigstore/cosign-installer@main

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Cache Docker layers
        uses: actions/cache@v3.0.4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - id: docker_meta
        uses: docker/metadata-action@v5.2.0
        with:
          images: ghcr.io/adamus1red/mailgun-smtp-server
          tags: |
            type=sha,format=long
            type=schedule,pattern={{date 'YYYYMMDD'}}
            type=schedule,pattern=nightly
            type=edge
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern=v{{major}}

      - name: Build and Push container images
        uses: docker/build-push-action@v3
        with:
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

#       - name: Sign image with a key
#         run: |
#           echo '${{secrets.COSIGN_PRIVATE_KEY}}' > /tmp/my_cosign.key && \
#           cosign sign --key /tmp/my_cosign.key ${TAGS}
#         env:
#           TAGS: ${{ steps.docker_meta.outputs.tags }}
#           COSIGN_PRIVATE_KEY: ${{secrets.COSIGN_PRIVATE_KEY}}
#           COSIGN_PASSWORD: ${{secrets.COSIGN_PASSWORD}}

#       - name: Sign the images with GitHub OIDC Token
#         run: cosign sign ${TAGS}
#         env:
#           TAGS: ${{ steps.docker_meta.outputs.tags }}
#           COSIGN_EXPERIMENTAL: 1
